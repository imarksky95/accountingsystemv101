{"version":3,"file":"static/js/927.699cd9d2.chunk.js","mappings":"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","sources":["utils/date.ts","hooks/useRoles.ts","pages/UsersAndRoleSettings.tsx"],"sourcesContent":["export function formatDateToMMDDYYYY(input: string | Date | undefined | null): string {\n  if (!input) return '';\n  const d = typeof input === 'string' ? new Date(input) : input;\n  if (Number.isNaN(d.getTime())) return '';\n  const mm = String(d.getMonth() + 1).padStart(2, '0');\n  const dd = String(d.getDate()).padStart(2, '0');\n  const yyyy = String(d.getFullYear());\n  return `${mm}/${dd}/${yyyy}`;\n}\n","import { useState, useEffect } from 'react';\nimport { buildUrl, tryFetchWithFallback, API_BASE as RESOLVED_API_BASE } from '../apiBase';\n\nconsole.debug && console.debug('useRoles: resolved API_BASE =', RESOLVED_API_BASE || '(empty, using fallback)');\n\nexport function useRoles() {\n  const [roles, setRoles] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  async function fetchRoles() {\n    setLoading(true);\n    try {\n      const path = `/api/roles`;\n      const res = await tryFetchWithFallback(path, { cache: 'no-store' });\n      console.debug && console.debug('useRoles: response status', res.status);\n      const data = await res.json();\n      setRoles(Array.isArray(data) ? data : []);\n    } catch (e) {\n      console.error('Failed to fetch roles', e);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function updateRole(roleId: number, payload: any) {\n    try {\n  const token = localStorage.getItem('token');\n  const path = `/api/roles/${roleId}`;\n  const url = buildUrl(path);\n  const res = await fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json', ...(token ? { Authorization: `Bearer ${token}` } : {}) },\n        body: JSON.stringify(payload),\n      });\n      if (!res.ok) throw new Error('Failed to update role');\n      const updated = await res.json();\n      setRoles(prev => prev.map(r => (r.role_id === updated.role_id ? updated : r)));\n      return updated;\n    } catch (e) {\n      console.error('Update role failed', e);\n      throw e;\n    }\n  }\n\n  useEffect(() => {\n    fetchRoles();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { roles, loading, fetchRoles, updateRole };\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { formatDateToMMDDYYYY } from '../utils/date';\nimport { useRoles } from '../hooks/useRoles';\nimport {\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  CircularProgress,\n  Autocomplete,\n  TextField,\n  \n  Snackbar,\n  Alert,\n  Grid,\n  Typography,\n  Tabs,\n  Tab,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper\n} from '@mui/material';\nimport { UserContext } from '../UserContext';\n\n// Basic users fetch for multi-select options\nimport { buildUrl, tryFetchWithFallback, API_BASE as RESOLVED_API_BASE } from '../apiBase';\nconsole.debug && console.debug('UsersAndRoleSettings: resolved API_BASE =', RESOLVED_API_BASE || '(empty, using fallback)');\n\n// ...existing code...\n\nexport default function UsersAndRoleSettings() {\n  console.debug && console.debug('UsersAndRoleSettings: component render');\n  const { roles, loading, updateRole, fetchRoles } = useRoles();\n  const { user } = useContext(UserContext);\n  const [showAddRole, setShowAddRole] = useState(false);\n  const [newRoleName, setNewRoleName] = useState('');\n  \n  const [newRoleType, setNewRoleType] = useState<'none'|'reviewer'|'approver'|'both'>('none');\n  const [users, setUsers] = useState<any[]>([]);\n  const [showAddUser, setShowAddUser] = useState(false);\n  const [newUser, setNewUser] = useState({ username: '', password: '', role_id: '' });\n  const [newUserFullName, setNewUserFullName] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserMobile, setNewUserMobile] = useState('');\n  const [open, setOpen] = useState(false);\n  const [editing, setEditing] = useState<any | null>(null);\n  \n  const [editRoleType, setEditRoleType] = useState<'none'|'reviewer'|'approver'|'both'>('none');\n  const [saving, setSaving] = useState(false);\n  const [snack, setSnack] = useState<{ open: boolean; message: string; severity?: 'success' | 'error' | 'info' }>({ open: false, message: '' });\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [userToDelete, setUserToDelete] = useState<any | null>(null);\n  const [showDeleteRoleConfirm, setShowDeleteRoleConfirm] = useState(false);\n  const [roleToDelete, setRoleToDelete] = useState<any | null>(null);\n  const [showRoleDeleteBlocked, setShowRoleDeleteBlocked] = useState(false);\n  const [roleDeleteBlockedUsers, setRoleDeleteBlockedUsers] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        // Fetch actual users list (requires admin privileges)\n        const path = '/api/users';\n        console.debug && console.debug('UsersAndRoleSettings: fetching users via tryFetchWithFallback', path);\n        const res = await tryFetchWithFallback(path, { cache: 'no-store', headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` } });\n        if (!res.ok) {\n          console.warn('Users API returned non-ok status', res.status);\n          setUsers([]);\n          return;\n        }\n        const data = await res.json();\n        setUsers(Array.isArray(data) ? data : []);\n      } catch (e) {\n        console.error('Failed to fetch users', e);\n      }\n    }\n    fetchUsers();\n  }, []);\n\n  // Clear Add User form whenever the Add User dialog is opened\n  useEffect(() => {\n    if (showAddUser) {\n      setNewUser({ username: '', password: '', role_id: '' });\n      setNewUserFullName('');\n      setNewUserEmail('');\n      setNewUserMobile('');\n    }\n  }, [showAddUser]);\n\n  function openEditor(role: any) {\n    setEditing(role);\n    // infer role_type from stored field if present\n    setEditRoleType(role.role_type || 'none');\n    setOpen(true);\n  }\n\n  // Edit user dialog\n  const [editingUser, setEditingUser] = useState<any | null>(null);\n  const [editUserFullName, setEditUserFullName] = useState('');\n  const [editUserEmail, setEditUserEmail] = useState('');\n  const [editUserMobile, setEditUserMobile] = useState('');\n  const [editUserRoleId, setEditUserRoleId] = useState<any>('');\n\n  function openUserEditor(u: any) {\n    // fetch latest from server in case the users array is stale\n    (async () => {\n      try {\n        const res = await tryFetchWithFallback(`/api/users/${u.user_id}`, { cache: 'no-store', headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` } });\n        if (res.ok) {\n          const fresh = await res.json();\n          setEditingUser(fresh);\n          setEditUserFullName(fresh.full_name || '');\n          setEditUserEmail(fresh.email || '');\n          setEditUserMobile(fresh.mobile || '');\n          setEditUserRoleId(fresh.role_id || '');\n        } else {\n          // fallback to existing object\n          setEditingUser(u);\n          setEditUserFullName(u.full_name || '');\n          setEditUserEmail(u.email || '');\n          setEditUserMobile(u.mobile || '');\n          setEditUserRoleId(u.role_id || '');\n        }\n      } catch (e) {\n        setEditingUser(u);\n        setEditUserFullName(u.full_name || '');\n        setEditUserEmail(u.email || '');\n        setEditUserMobile(u.mobile || '');\n        setEditUserRoleId(u.role_id || '');\n      }\n    })();\n  }\n\n  \n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  return (\n    <Box p={2}>\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n        <Grid item>\n          <Typography variant=\"h5\">Users and Role Settings</Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">Manage which users can review or approve actions per role.</Typography>\n        </Grid>\n      </Grid>\n\n      <Box mt={2}>\n        {loading ? <CircularProgress /> : (\n          roles.length === 0 ? (\n            <Box p={2}>\n              <Typography>No roles found. Ensure the backend `/api/roles` endpoint is reachable and returns role rows.</Typography>\n            </Box>\n          ) : (\n            <>\n              <Tabs value={tabIndex} onChange={(_, v) => setTabIndex(v)} sx={{ mb: 2 }}>\n                <Tab label=\"Users\" />\n                <Tab label=\"Roles\" />\n              </Tabs>\n\n              {tabIndex === 0 && (\n                <>\n                  <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" mb={1}>\n                    <Box>\n                      {user && Number(user.role_id) === 1 && (\n                        <>\n                          <Button variant=\"contained\" size=\"small\" onClick={() => setShowAddUser(true)}>ADD USER</Button>\n                        </>\n                      )}\n                    </Box>\n                  </Box>\n\n                  <Paper>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Full Name</TableCell>\n                          <TableCell>Username</TableCell>\n                          <TableCell>Role</TableCell>\n                          <TableCell>Created At</TableCell>\n                          <TableCell align=\"right\">Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {users.map(u => (\n                          <TableRow key={u.user_id}>\n                            <TableCell>{u.full_name || '—'}</TableCell>\n                            <TableCell>{u.username}</TableCell>\n                            <TableCell>{(roles.find(r => Number(r.role_id) === Number(u.role_id)) || {}).role_name || `ID ${u.role_id}`}</TableCell>\n                            <TableCell>{u.created_at ? formatDateToMMDDYYYY(u.created_at) : '—'}</TableCell>\n                            <TableCell align=\"right\">\n                              {user && Number(user.role_id) === 1 ? (\n                                <>\n                                  <Button size=\"small\" onClick={() => openUserEditor(u)}>Edit</Button>\n                                    <Button size=\"small\" onClick={() => { setUserToDelete(u); setShowDeleteConfirm(true); }} sx={{ ml: 1 }}>Delete</Button>\n                                </>\n                              ) : null}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                        {users.length === 0 && (\n                          <TableRow>\n                            <TableCell colSpan={5}>No users found or insufficient permissions.</TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </Paper>\n                </>\n              )}\n\n              {tabIndex === 1 && (\n                <>\n                  <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" mb={1}>\n                    {user && Number(user.role_id) === 1 && (\n                      <Button variant=\"outlined\" size=\"small\" onClick={() => setShowAddRole(true)}>ADD ROLE</Button>\n                    )}\n                  </Box>\n\n                  <List dense disablePadding>\n                    {roles.map(r => (\n                      <ListItem key={r.role_id} sx={{ py: 0.5 }}>\n                        <ListItemText\n                          primary={r.role_name}\n                          secondary={<><strong>Type:</strong> {(r.role_type || 'none').toString()}</>}\n                        />\n                        <Box>\n                          {user && Number(user.role_id) === 1 && (\n                            <>\n                              <Button size=\"small\" onClick={() => openEditor(r)}>Edit</Button>\n                              <Button size=\"small\" color=\"error\" sx={{ ml: 1 }} onClick={() => {\n                                const assigned = Array.isArray(users) ? users.filter(u => Number(u.role_id) === Number(r.role_id)) : [];\n                                if (assigned.length > 0) {\n                                  setRoleToDelete(r);\n                                  setRoleDeleteBlockedUsers(assigned);\n                                  setShowRoleDeleteBlocked(true);\n                                } else {\n                                  setRoleToDelete(r);\n                                  setShowDeleteRoleConfirm(true);\n                                }\n                              }}>Delete</Button>\n                            </>\n                          )}\n                        </Box>\n                      </ListItem>\n                    ))}\n                  </List>\n                </>\n              )}\n            </>\n          )\n        )}\n      </Box>\n\n      <Dialog open={showAddUser} onClose={() => setShowAddUser(false)}>\n        <DialogTitle>Add User</DialogTitle>\n        <DialogContent>\n          <Box mt={1} display=\"flex\" flexDirection=\"column\" gap={2}>\n            <TextField label=\"Full name\" value={newUserFullName} onChange={(e) => setNewUserFullName(e.target.value)} fullWidth />\n            <TextField label=\"Username\" value={newUser.username} onChange={(e) => setNewUser({ ...newUser, username: e.target.value })} fullWidth />\n            <TextField label=\"Password\" type=\"password\" value={newUser.password} onChange={(e) => setNewUser({ ...newUser, password: e.target.value })} fullWidth />\n            <TextField label=\"Email\" type=\"email\" value={newUserEmail} onChange={(e) => setNewUserEmail(e.target.value)} fullWidth />\n            <TextField label=\"Mobile\" value={newUserMobile} onChange={(e) => setNewUserMobile(e.target.value)} fullWidth />\n            <Autocomplete\n              options={roles}\n              getOptionLabel={(opt:any) => opt.role_name || String(opt.role_id)}\n              onChange={(e, val:any) => setNewUser({ ...newUser, role_id: val ? String(val.role_id) : '' })}\n              renderInput={(params) => <TextField {...params} label=\"Role\" />}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowAddUser(false)}>Cancel</Button>\n          <Button variant=\"contained\" onClick={async () => {\n            const isAdmin = user && Number(user.role_id) === 1;\n            if (!isAdmin) {\n              setSnack({ open: true, message: 'Forbidden: requires admin role', severity: 'error' });\n              setShowAddUser(false);\n              return;\n            }\n            try {\n                // validation: email format\n                if (newUserEmail && !/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(newUserEmail)) {\n                  setSnack({ open: true, message: 'Invalid email format', severity: 'error' });\n                  return;\n                }\n                // normalize mobile: keep digits only, allow leading '+'\n                const normalizeMobile = (m: string) => {\n                  if (!m) return '';\n                  // keep leading + if present, then digits\n                  const plus = m.trim().startsWith('+') ? '+' : '';\n                  const digits = m.replace(/[^0-9]/g, '');\n                  return plus + digits;\n                };\n                const normalizedMobile = normalizeMobile(newUserMobile);\n\n                const payload: any = { username: newUser.username, password: newUser.password, role_id: Number(newUser.role_id) };\n                if (newUserFullName) payload.full_name = newUserFullName;\n                if (newUserEmail) payload.email = newUserEmail;\n                if (normalizedMobile) payload.mobile = normalizedMobile;\n                const url = buildUrl('/api/auth/register');\n                const token = localStorage.getItem('token') || '';\n                const res = await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json', Authorization: token ? `Bearer ${token}` : '' }, body: JSON.stringify(payload) });\n              if (!res.ok) {\n                const err = await res.json().catch(() => ({}));\n                setSnack({ open: true, message: err.message || 'Failed to add user', severity: 'error' });\n                return;\n              }\n                // server response ignored; just show success\n                setSnack({ open: true, message: 'User added', severity: 'success' });\n              setShowAddUser(false);\n              // Refresh users\n              try {\n                const res2 = await tryFetchWithFallback('/api/users', { cache: 'no-store', headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` } });\n                if (res2.ok) {\n                  const d = await res2.json();\n                  setUsers(Array.isArray(d) ? d : []);\n                }\n              } catch (e) { /* ignore */ }\n            } catch (e) {\n              setSnack({ open: true, message: 'Failed to add user', severity: 'error' });\n            }\n          }}>Add</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={showAddRole} onClose={() => setShowAddRole(false)}>\n        <DialogTitle>Add Role</DialogTitle>\n        <DialogContent>\n          <Box mt={1}>\n            <TextField label=\"Role Name\" value={newRoleName} onChange={(e) => setNewRoleName(e.target.value)} fullWidth />\n          </Box>\n          <Box mt={2}>\n            <TextField select label=\"Role Type\" value={newRoleType} onChange={(e) => setNewRoleType(e.target.value as any)} fullWidth SelectProps={{ native: true }}>\n              <option value=\"none\">None</option>\n              <option value=\"reviewer\">Reviewer</option>\n              <option value=\"approver\">Approver</option>\n              <option value=\"both\">Both</option>\n            </TextField>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowAddRole(false)}>Cancel</Button>\n              <Button variant=\"contained\" onClick={async () => {\n                if (!newRoleName.trim()) { setSnack({ open: true, message: 'Role name required', severity: 'error' }); return; }\n                try {\n                  const token = localStorage.getItem('token') || '';\n                  const payload: any = { role_name: newRoleName.trim(), role_type: newRoleType };\n\n                  const res = await fetch(buildUrl('/api/roles'), {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json', Authorization: token ? `Bearer ${token}` : '' },\n                    body: JSON.stringify(payload)\n                  });\n                  if (!res.ok) {\n                    const err = await res.json().catch(() => ({}));\n                    setSnack({ open: true, message: err.error || 'Failed to add role', severity: 'error' });\n                    return;\n                  }\n                  // server response ignored; created role handled by refresh\n                  setSnack({ open: true, message: 'Role added', severity: 'success' });\n                  setShowAddRole(false);\n                  setNewRoleName('');\n                  setNewRoleType('none');\n                  // refresh users and roles\n                  try {\n                    await fetchRoles();\n                    const res2 = await tryFetchWithFallback('/api/users', { cache: 'no-store', headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` } });\n                    if (res2.ok) {\n                      const d = await res2.json();\n                      setUsers(Array.isArray(d) ? d : []);\n                    }\n                  } catch (e) { /* ignore */ }\n                } catch (e) {\n                  setSnack({ open: true, message: 'Failed to add role', severity: 'error' });\n                }\n              }}>Add</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Edit Role</DialogTitle>\n        <DialogContent>\n          <Box mt={1} mb={2}>\n            <TextField select label=\"Role Type\" value={editRoleType} onChange={(e) => setEditRoleType(e.target.value as any)} fullWidth SelectProps={{ native: true }}>\n              <option value=\"none\">None</option>\n              <option value=\"reviewer\">Reviewer</option>\n              <option value=\"approver\">Approver</option>\n              <option value=\"both\">Both</option>\n            </TextField>\n          </Box>\n\n          {/* Role now driven exclusively by role_type; reviewer/approver pickers removed */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} disabled={saving}>Cancel</Button>\n          <Button onClick={async () => {\n            if (!editing) return;\n            setSaving(true);\n            try {\n              const payload: any = { role_type: editRoleType };\n              await updateRole(editing.role_id, payload);\n              setOpen(false);\n              setSnack({ open: true, message: 'Role updated', severity: 'success' });\n            } catch (e) {\n              setSnack({ open: true, message: 'Failed to save role', severity: 'error' });\n            } finally {\n              setSaving(false);\n            }\n          }} disabled={saving} variant=\"contained\">{saving ? 'Saving...' : 'Save'}</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={!!editingUser} onClose={() => setEditingUser(null)} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Edit User</DialogTitle>\n        <DialogContent>\n          <Box mt={1} display=\"flex\" flexDirection=\"column\" gap={2}>\n            <TextField label=\"Full name\" value={editUserFullName} onChange={(e) => setEditUserFullName(e.target.value)} fullWidth />\n            <TextField label=\"Email\" value={editUserEmail} onChange={(e) => setEditUserEmail(e.target.value)} fullWidth />\n            <TextField label=\"Mobile\" value={editUserMobile} onChange={(e) => setEditUserMobile(e.target.value)} fullWidth />\n            <Autocomplete\n              options={roles}\n              getOptionLabel={(opt:any) => opt.role_name || String(opt.role_id)}\n              value={roles.find(r => Number(r.role_id) === Number(editUserRoleId)) || null}\n              onChange={(e, val:any) => setEditUserRoleId(val ? val.role_id : '')}\n              renderInput={(params) => <TextField {...params} label=\"Role\" />}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setEditingUser(null)}>Cancel</Button>\n          <Button variant=\"contained\" onClick={async () => {\n            if (!editingUser) return;\n            try {\n              // email validation\n              if (editUserEmail && !/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(editUserEmail)) {\n                setSnack({ open: true, message: 'Invalid email format', severity: 'error' });\n                return;\n              }\n              const normalizeMobile = (m: string) => {\n                if (!m) return '';\n                const plus = m.trim().startsWith('+') ? '+' : '';\n                const digits = m.replace(/[^0-9]/g, '');\n                return plus + digits;\n              };\n              const normalizedMobile = normalizeMobile(editUserMobile);\n\n              const payload: any = { full_name: editUserFullName, email: editUserEmail, mobile: normalizedMobile, role_id: Number(editUserRoleId) };\n              const token = localStorage.getItem('token') || '';\n              const res = await fetch(buildUrl(`/api/users/${editingUser.user_id}`), { method: 'PUT', headers: { 'Content-Type': 'application/json', Authorization: token ? `Bearer ${token}` : '' }, body: JSON.stringify(payload) });\n              if (!res.ok) {\n                const e = await res.json().catch(() => ({}));\n                setSnack({ open: true, message: e.error || 'Failed to update user', severity: 'error' });\n                return;\n              }\n              // server response ignored; updated handled by refresh\n              setSnack({ open: true, message: 'User updated', severity: 'success' });\n              setEditingUser(null);\n              // Refresh users\n              try {\n                const res2 = await tryFetchWithFallback('/api/users', { cache: 'no-store', headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` } });\n                if (res2.ok) {\n                  const d = await res2.json();\n                  setUsers(Array.isArray(d) ? d : []);\n                }\n              } catch (e) { /* ignore */ }\n            } catch (e) {\n              setSnack({ open: true, message: 'Failed to update user', severity: 'error' });\n            }\n          }}>Save</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={showDeleteConfirm} onClose={() => { setShowDeleteConfirm(false); setUserToDelete(null); }}>\n        <DialogTitle>Delete User</DialogTitle>\n        <DialogContent>\n          <Typography>Are you sure you want to delete the user <strong>{userToDelete ? userToDelete.username : ''}</strong>? This action cannot be undone.</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { setShowDeleteConfirm(false); setUserToDelete(null); }}>Cancel</Button>\n            <Button variant=\"contained\" onClick={async () => {\n            if (!userToDelete) return;\n            try {\n              const token = localStorage.getItem('token') || '';\n              const res = await fetch(buildUrl(`/api/users/${userToDelete.user_id}`), { method: 'DELETE', headers: { Authorization: token ? `Bearer ${token}` : '' } });\n              if (!res.ok) {\n                const err = await res.json().catch(() => ({}));\n                setSnack({ open: true, message: err.error || 'Failed to delete user', severity: 'error' });\n                return;\n              }\n              setSnack({ open: true, message: 'User deleted', severity: 'success' });\n              setShowDeleteConfirm(false);\n              setUserToDelete(null);\n              try {\n                const res2 = await tryFetchWithFallback('/api/users', { cache: 'no-store', headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` } });\n                if (res2.ok) {\n                  const d = await res2.json();\n                  setUsers(Array.isArray(d) ? d : []);\n                }\n              } catch (e) { /* ignore */ }\n            } catch (e) {\n              setSnack({ open: true, message: 'Failed to delete user', severity: 'error' });\n            }\n          }} color=\"error\">Delete</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={showDeleteRoleConfirm} onClose={() => { setShowDeleteRoleConfirm(false); setRoleToDelete(null); }}>\n        <DialogTitle>Delete Role</DialogTitle>\n        <DialogContent>\n          <Typography>Are you sure you want to delete the role <strong>{roleToDelete ? roleToDelete.role_name : ''}</strong>? This may fail if users are assigned to this role.</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { setShowDeleteRoleConfirm(false); setRoleToDelete(null); }}>Cancel</Button>\n          <Button variant=\"contained\" color=\"error\" onClick={async () => {\n            if (!roleToDelete) return;\n            try {\n              const token = localStorage.getItem('token') || '';\n              const res = await fetch(buildUrl(`/api/roles/${roleToDelete.role_id}`), { method: 'DELETE', headers: { Authorization: token ? `Bearer ${token}` : '' } });\n              if (!res.ok) {\n                const err = await res.json().catch(() => ({}));\n                setSnack({ open: true, message: err.error || 'Failed to delete role', severity: 'error' });\n                return;\n              }\n              setSnack({ open: true, message: 'Role deleted', severity: 'success' });\n              setShowDeleteRoleConfirm(false);\n              setRoleToDelete(null);\n              try { await fetchRoles(); } catch (e) { /* ignore */ }\n            } catch (e) {\n              setSnack({ open: true, message: 'Failed to delete role', severity: 'error' });\n            }\n          }}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={showRoleDeleteBlocked} onClose={() => { setShowRoleDeleteBlocked(false); setRoleDeleteBlockedUsers([]); setRoleToDelete(null); }} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Cannot Delete Role</DialogTitle>\n        <DialogContent>\n          <Typography>This role has users assigned. Re-assign those users to a different role before deleting.</Typography>\n          <Box mt={2}>\n            {roleDeleteBlockedUsers.map(u => (\n              <Box key={u.user_id} display=\"flex\" justifyContent=\"space-between\" sx={{ py: 0.5 }}>\n                <Typography>{u.username}</Typography>\n                <Typography color=\"textSecondary\">{(roles.find(r => Number(r.role_id) === Number(u.role_id)) || {}).role_name || `ID ${u.role_id}`}</Typography>\n              </Box>\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { setShowRoleDeleteBlocked(false); setRoleDeleteBlockedUsers([]); setRoleToDelete(null); }}>Close</Button>\n          <Button variant=\"contained\" onClick={() => { setShowRoleDeleteBlocked(false); setRoleDeleteBlockedUsers([]); setTabIndex(0); }}>Go to Users</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar open={snack.open} autoHideDuration={3000} onClose={() => setSnack(s => ({ ...s, open: false }))}>\n        <Alert onClose={() => setSnack(s => ({ ...s, open: false }))} severity={snack.severity || 'info'} sx={{ width: '100%' }}>\n          {snack.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n"],"names":["formatDateToMMDDYYYY","input","d","Date","Number","isNaN","getTime","mm","String","getMonth","padStart","dd","getDate","yyyy","getFullYear","concat","console","debug","RESOLVED_API_BASE","UsersAndRoleSettings","roles","loading","updateRole","fetchRoles","setRoles","useState","setLoading","async","path","res","tryFetchWithFallback","cache","status","data","json","Array","isArray","e","error","useEffect","roleId","payload","token","localStorage","getItem","url","buildUrl","fetch","method","headers","_objectSpread","Authorization","body","JSON","stringify","ok","Error","updated","prev","map","r","role_id","useRoles","user","useContext","UserContext","showAddRole","setShowAddRole","newRoleName","setNewRoleName","newRoleType","setNewRoleType","users","setUsers","showAddUser","setShowAddUser","newUser","setNewUser","username","password","newUserFullName","setNewUserFullName","newUserEmail","setNewUserEmail","newUserMobile","setNewUserMobile","open","setOpen","editing","setEditing","editRoleType","setEditRoleType","saving","setSaving","snack","setSnack","message","showDeleteConfirm","setShowDeleteConfirm","userToDelete","setUserToDelete","showDeleteRoleConfirm","setShowDeleteRoleConfirm","roleToDelete","setRoleToDelete","showRoleDeleteBlocked","setShowRoleDeleteBlocked","roleDeleteBlockedUsers","setRoleDeleteBlockedUsers","warn","fetchUsers","editingUser","setEditingUser","editUserFullName","setEditUserFullName","editUserEmail","setEditUserEmail","editUserMobile","setEditUserMobile","editUserRoleId","setEditUserRoleId","tabIndex","setTabIndex","_jsxs","Box","p","children","_jsx","Grid","container","alignItems","justifyContent","item","Typography","variant","color","mt","CircularProgress","length","_Fragment","Tabs","value","onChange","_","v","sx","mb","Tab","label","display","Button","size","onClick","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","u","full_name","find","role_name","created_at","user_id","fresh","email","mobile","openUserEditor","ml","colSpan","List","dense","disablePadding","ListItem","py","ListItemText","primary","secondary","role_type","toString","openEditor","role","assigned","filter","Dialog","onClose","DialogTitle","DialogContent","flexDirection","gap","TextField","target","fullWidth","type","Autocomplete","options","getOptionLabel","opt","val","renderInput","params","DialogActions","severity","test","normalizedMobile","m","trim","startsWith","replace","normalizeMobile","err","catch","res2","select","SelectProps","native","maxWidth","disabled","Snackbar","autoHideDuration","s","Alert","width"],"sourceRoot":""}