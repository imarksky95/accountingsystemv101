{"version":3,"file":"static/js/511.94d3c4ab.chunk.js","mappings":"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","sources":["components/DashboardLayout.tsx"],"sourcesContent":["\r\nimport React, { useContext, useState } from 'react';\r\nimport { Box, CssBaseline, AppBar, Toolbar, Typography, Avatar, IconButton, Tooltip, Button, Menu, MenuItem } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { UserContext } from '../UserContext';\r\nimport { useCompany } from '../CompanyContext';\r\n\r\nconst navItems = [\r\n  { text: 'Dashboard', path: '/dashboard' },\r\n  { text: 'Banking Management', path: '/banking' },\r\n  { text: 'AP Management', path: '/ap' },\r\n  { text: 'AR Management', path: '/ar' },\r\n  { text: 'Contacts', path: '/contacts' },\r\n  { text: 'Chart of Accounts', path: '/coa' },\r\n  { text: 'Payroll', path: '/payroll' },\r\n  { text: 'Settings', path: '/settings' },\r\n];\r\n\r\nconst DashboardLayout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  // Use companyName from CompanyContext\r\n  const { companyName } = useCompany();\r\n\r\n  // Compute display name, initials (first+last), and deterministic bg color based on user_id\r\n  const displayName = (user && (user.full_name || user.username)) || 'User';\r\n  const initials = (() => {\r\n    const parts = (displayName || '').trim().split(/\\s+/).filter(Boolean);\r\n    if (parts.length === 0) return 'U';\r\n    if (parts.length === 1) return parts[0].slice(0, 2).toUpperCase();\r\n    const first = parts[0][0] || '';\r\n    const last = parts[parts.length - 1][0] || '';\r\n    return (first + last).toUpperCase();\r\n  })();\r\n\r\n  const avatarBg = (() => {\r\n    const palette = ['#F44336','#E91E63','#9C27B0','#673AB7','#3F51B5','#2196F3','#03A9F4','#00BCD4','#009688','#4CAF50','#8BC34A','#CDDC39','#FFC107','#FF9800','#FF5722','#795548'];\r\n    const id = user && user.user_id ? Number(user.user_id) : 0;\r\n    return palette[id % palette.length];\r\n  })();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  // Mobile menu anchor\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleMenuOpen = (e: React.MouseEvent<HTMLElement>) => setAnchorEl(e.currentTarget);\r\n  const handleMenuClose = () => setAnchorEl(null);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n            <Button\r\n              onClick={() => navigate('/dashboard')}\r\n              color=\"inherit\"\r\n              aria-label={`Home - ${companyName}`}\r\n              sx={{ textTransform: 'none', fontSize: '1.125rem', fontWeight: 600, p: 0 }}\r\n            >\r\n              {companyName}\r\n            </Button>\r\n            <Box role=\"navigation\" aria-label=\"Primary\" sx={{ display: { xs: 'none', sm: 'flex' }, gap: 1 }}>\r\n              {navItems.map((item) => {\r\n                const active = location.pathname === item.path;\r\n                return (\r\n                  <Button\r\n                    key={item.text}\r\n                    onClick={() => navigate(item.path)}\r\n                    role=\"link\"\r\n                    aria-current={active ? 'page' : undefined}\r\n                    sx={{\r\n                      textTransform: 'none',\r\n                      color: active ? (theme: any) => theme.palette.getContrastText(theme.palette.secondary.main) : 'inherit',\r\n                      backgroundColor: active ? (theme: any) => theme.palette.secondary.main : 'transparent',\r\n                      borderRadius: '999px',\r\n                      px: 2,\r\n                      py: 0.5,\r\n                      minHeight: 36,\r\n                      '&:hover': { backgroundColor: active ? (theme: any) => theme.palette.secondary.dark : (theme: any) => theme.palette.action.hover },\r\n                      '&:focus-visible': { outline: (theme: any) => `3px solid ${theme.palette.primary.light}`, outlineOffset: '2px' },\r\n                    }}\r\n                  >\r\n                    {item.text}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </Box>\r\n            <Box sx={{ display: { xs: 'flex', sm: 'none' } }}>\r\n              <IconButton color=\"inherit\" onClick={handleMenuOpen} aria-label=\"Open main menu\" id=\"nav-menu-button\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu anchorEl={anchorEl} open={open} onClose={handleMenuClose} aria-label=\"Main menu\" id=\"main-menu\" MenuListProps={{ 'aria-labelledby': 'nav-menu-button' }}>\r\n                {navItems.map((item) => (\r\n                  <MenuItem key={item.text} onClick={() => { handleMenuClose(); navigate(item.path); }}>\r\n                    {item.text}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n            <Box sx={{ textAlign: 'right', mr: 1 }}>\r\n              <Typography variant=\"body2\">{displayName}</Typography>\r\n            </Box>\r\n            <Tooltip title=\"Account\">\r\n              <IconButton onClick={() => navigate('/profile')} aria-label={`Account of ${displayName}`}>\r\n                <Avatar sx={{ bgcolor: avatarBg }}>{initials}</Avatar>\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Button color=\"inherit\" onClick={handleLogout} aria-label=\"Logout\">Logout</Button>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Box component=\"main\" sx={{ flexGrow: 1, bgcolor: 'background.default', p: 3 }}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n"],"names":["navItems","text","path","_ref","children","navigate","useNavigate","location","useLocation","user","setUser","useContext","UserContext","companyName","useCompany","displayName","full_name","username","initials","parts","trim","split","filter","Boolean","length","slice","toUpperCase","avatarBg","palette","user_id","Number","anchorEl","setAnchorEl","useState","open","handleMenuClose","_jsxs","Box","sx","display","flexDirection","minHeight","_jsx","CssBaseline","AppBar","position","color","Toolbar","justifyContent","alignItems","gap","Button","onClick","concat","textTransform","fontSize","fontWeight","p","role","xs","sm","map","item","active","pathname","undefined","theme","getContrastText","secondary","main","backgroundColor","borderRadius","px","py","dark","action","hover","outline","primary","light","outlineOffset","IconButton","e","currentTarget","id","MenuIcon","Menu","onClose","MenuListProps","MenuItem","textAlign","mr","Typography","variant","Tooltip","title","Avatar","bgcolor","handleLogout","localStorage","removeItem","component","flexGrow"],"sourceRoot":""}